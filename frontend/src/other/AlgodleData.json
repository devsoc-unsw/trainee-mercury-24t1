[
  {
    "Answer": "bubble sort",
    "CPlusPlus": "void sort(int arr[], int n)\n{\n    int i, j;\n    bool swapped;\n    for (i = 0; i < n - 1; i++) {\n        swapped = false;\n        for (j = 0; j < n - i - 1; j++) {\n            if (arr[j] > arr[j + 1]) {\n                swap(arr[j], arr[j + 1]);\n                swapped = true;\n            }\n        }\n\n        // If no two elements were swapped\n        // by inner loop, then break\n        if (swapped == false)\n            break;\n    }\n}",
    "JavaScript": "function sort(array) {\n    const arrayLength = array.length;\n    let isSwapped;\n\n    for (let i = 0; i < arrayLength; i++) {\n        isSwapped = false;\n\n        for (let j = 0; j < arrayLength - i - 1; j++) {\n            if (array[j] > array[j + 1]) {\n                // Swap elements\n                [array[j], array[j + 1]] = [array[j + 1], array[j]];\n                isSwapped = true;\n            }\n        }\n\n        // If no two elements were swapped in the inner loop, array is sorted\n        if (!isSwapped) \n            break;\n    }\n\n    return array;\n}",
    "Python": "def sort(array):    \n  for i in range(len(array)):\n    for j in range(0, len(array) - i - 1):\n      if array[j] > array[j + 1]:\n        temp = array[j]\n        array[j] = array[j+1]\n        array[j+1] = temp"
  },
  {
    "Answer": "merge sort",
    "CPlusPlus": "void helper(int arr[], int p, int q, int r) {  \n  int n1 = q - p + 1;\n  int n2 = r - q;\n\n  int L[n1], M[n2];\n\n  for (int i = 0; i < n1; i++)\n    L[i] = arr[p + i];\n  for (int j = 0; j < n2; j++)\n    M[j] = arr[q + 1 + j];\n\n  int i, j, k;\n  i = 0;\n  j = 0;\n  k = p;\n\n  while (i < n1 && j < n2) {\n    if (L[i] <= M[j]) {\n      arr[k] = L[i];\n      i++;\n    } else {\n      arr[k] = M[j];\n      j++;\n    }\n    k++;\n  }\n\n  while (i < n1) {\n    arr[k] = L[i];\n    i++;\n    k++;\n  }\n\n  while (j < n2) {\n    arr[k] = M[j];\n    j++;\n    k++;\n  }\n}\n\nvoid sort(int arr[], int l, int r) {\n  if (l < r) {\n    int m = l + (r - l) / 2;\n\n    sort(arr, l, m);\n    sort(arr, m + 1, r);\n\n    helper(arr, l, m, r);\n  }\n}",
    "JavaScript": "function helper(arr, l, m, r)\n{\n    var n1 = m - l + 1;\n    var n2 = r - m;\n\n    var L = new Array(n1); \n    var R = new Array(n2);\n\n    for (var i = 0; i < n1; i++)\n        L[i] = arr[l + i];\n    for (var j = 0; j < n2; j++)\n        R[j] = arr[m + 1 + j];\n\n    var i = 0;\n\n    var j = 0;\n\n    var k = l;\n\n    while (i < n1 && j < n2) {\n        if (L[i] <= R[j]) {\n            arr[k] = L[i];\n            i++;\n        }\n        else {\n            arr[k] = R[j];\n            j++;\n        }\n        k++;\n    }\n\n    while (i < n1) {\n        arr[k] = L[i];\n        i++;\n        k++;\n    }\n\n    while (j < n2) {\n        arr[k] = R[j];\n        j++;\n        k++;\n    }\n}\n\nfunction sort(arr,l, r){\n    if(l>=r){\n        return;\n    }\n    var m =l+ parseInt((r-l)/2);\n    sort(arr,l,m);\n    sort(arr,m+1,r);\n    helper(arr,l,m,r);\n}\n",
    "Python": "def helper(arr, l, m, r):\n    n1 = m - l + 1\n    n2 = r - m\n \n    L = [0] * (n1)\n    R = [0] * (n2)\n \n    for i in range(0, n1):\n        L[i] = arr[l + i]\n \n    for j in range(0, n2):\n        R[j] = arr[m + 1 + j]\n \n    i = 0     # Initial index of first subarray\n    j = 0     # Initial index of second subarray\n    k = l     # Initial index of ------ subarray\n \n    while i < n1 and j < n2:\n        if L[i] <= R[j]:\n            arr[k] = L[i]\n            i += 1\n        else:\n            arr[k] = R[j]\n            j += 1\n        k += 1\n \n    while i < n1:\n        arr[k] = L[i]\n        i += 1\n        k += 1\n \n    while j < n2:\n        arr[k] = R[j]\n        j += 1\n        k += 1 \n \ndef sort(arr, l, r):\n    if l < r:\n \n        m = l+(r-l)//2\n \n        sort(arr, l, m)\n        sort(arr, m+1, r)\n        helper(arr, l, m, r)"
  },
  {
    "Answer": "selection sort",
    "CPlusPlus": "void sort(int arr[], int n)\n{\n    int i, j, min_idx;\n\n    for (i = 0; i < n - 1; i++) {\n\n        min_idx = i;\n        for (j = i + 1; j < n; j++) {\n            if (arr[j] < arr[min_idx])\n                min_idx = j;\n        }\n\n        if (min_idx != i)\n            swap(arr[min_idx], arr[i]);\n    }\n}",
    "JavaScript": "function swap(arr,xp, yp)\n{\n    var temp = arr[xp];\n    arr[xp] = arr[yp];\n    arr[yp] = temp;\n}\n\nfunction sort(arr,  n)\n{\n    var i, j, min_idx;\n\n    for (i = 0; i < n-1; i++)\n    {\n        min_idx = i;\n        for (j = i + 1; j < n; j++)\n        if (arr[j] < arr[min_idx])\n            min_idx = j;\n\n        swap(arr,min_idx, i);\n    }\n}",
    "Python": "def sort(array, size):\n    \n    for ind in range(size):\n        min_index = ind\n \n        for j in range(ind + 1, size):\n            if array[j] < array[min_index]:\n                min_index = j\n        (array[ind], array[min_index]) = (array[min_index], array[ind])"
  },
  {
    "Answer": "insertion sort",
    "CPlusPlus": "void sort(int arr[], int n)\n{\n    int i, key, j;\n    for (i = 1; i < n; i++) {\n        key = arr[i];\n        j = i - 1;\n\n        while (j >= 0 && arr[j] > key) {\n            arr[j + 1] = arr[j];\n            j = j - 1;\n        }\n        arr[j + 1] = key;\n    }\n}",
    "JavaScript": "function sort(arr, n)  \n{  \n    let i, key, j;  \n    for (i = 1; i < n; i++) \n    {  \n        key = arr[i];  \n        j = i - 1;  \n  \n        while (j >= 0 && arr[j] > key) \n        {  \n            arr[j + 1] = arr[j];  \n            j = j - 1;  \n        }  \n        arr[j + 1] = key;  \n    }  \n}  ",
    "Python": "def sort(arr):\n    for i in range(1, len(arr)):\n\n        key = arr[i]\n\n        j = i-1\n        while j >= 0 and key < arr[j] :\n                arr[j + 1] = arr[j]\n                j -= 1\n        arr[j + 1] = key\n"
  },
  {
    "Answer": "quick sort",
    "CPlusPlus": "int partition(int arr[], int low, int high)\n{  \n  int pivot = arr[high];\n  int i = (low-1);\n  \n  for(int j = low; j <= high; j++)\n  {\n    if (arr[j] < pivot)\n    {\n      i++;\n      swap(arr[i], arr[j]);\n    }\n  }\n  swap(arr[i+1], arr[high]);\n  return (i + 1);\n}\n           \nvoid sort(int arr[], int low,int high)\n{\n  if(low < high)\n  {    \n    int pi = partition(arr, low,high);\n    sort(arr, low, pi-1);\n    sort(arr, pi+1, high);\n  }\n}",
    "JavaScript": "function partition(arr, low, high) {\n    let pivot = arr[high];\n  \n    let i = low - 1;\n  \n    for (let j = low; j <= high - 1; j++) {\n        if (arr[j] < pivot) {\n            i++;\n            [arr[i], arr[j]] = [arr[j], arr[i]];\n        }\n    }\n  \n    [arr[i + 1], arr[high]] = [arr[high], arr[i + 1]];\n    return i + 1;\n}\n\nfunction sort(arr, low, high) {\n    if (low < high) {\n        let pi = partition(arr, low, high);\n  \n        sort(arr, low, pi - 1);\n        sort(arr, pi + 1, high);\n    }\n}",
    "Python": "def partition(array, low, high):\n    pivot = array[high]\n\n    i = low - 1\n\n    for j in range(low, high):\n        if array[j] <= pivot:\n\n            i = i + 1\n\n            (array[i], array[j]) = (array[j], array[i])\n\n    (array[i + 1], array[high]) = (array[high], array[i + 1])\n\n    return i + 1\n\ndef sort(array, low, high):\n    if low < high:\n\n        pi = partition(array, low, high)\n\n        sort(array, low, pi - 1)\n\n        sort(array, pi + 1, high)"
  }
]